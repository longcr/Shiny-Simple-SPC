)
mean.fn = function(z){mean(z)}
apply(df,2,mean.fn)
ggplot(df, aes(category2, amount)) + geom_boxplot()
library(RODBC)
channel <- odbcDriverConnect("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=S:/Admin-Share/key measures/Analytics/OpsAnalytics.accdb")
data <- sqlQuery( channel , paste ("select * from Quality"))
head(data); tail(data)
data <- sqlQuery( channel , paste ( "select * from Quality"
WHERE (((Sheet1.[Time Period])="January")) OR
(((Sheet1.[Time Period])="February")) OR
(((Sheet1.[Time Period])="March")) OR
(((Sheet1.[Time Period])="April")) OR
(((Sheet1.[Time Period])="May")) OR
(((Sheet1.[Time Period])="June")) OR
(((Sheet1.[Time Period])="July")) OR
(((Sheet1.[Time Period])="August")) OR
(((Sheet1.[Time Period])="September")) OR
(((Sheet1.[Time Period])="October")) OR
(((Sheet1.[Time Period])="November")) OR
(((Sheet1.[Time Period])="December")) ;         ) )
data <- sqlQuery( channel , paste ( "select * from Quality
WHERE (((Sheet1.[Time Period])="January")) OR
(((Sheet1.[Time Period])="February")) OR
(((Sheet1.[Time Period])="March")) OR
(((Sheet1.[Time Period])="April")) OR
(((Sheet1.[Time Period])="May")) OR
(((Sheet1.[Time Period])="June")) OR
(((Sheet1.[Time Period])="July")) OR
(((Sheet1.[Time Period])="August")) OR
(((Sheet1.[Time Period])="September")) OR
(((Sheet1.[Time Period])="October")) OR
(((Sheet1.[Time Period])="November")) OR
(((Sheet1.[Time Period])="December"))"         ) )
data <- sqlQuery( channel , paste ( "select * from Quality
WHERE (  ((Sheet1.[Time Period])="January") OR
((Sheet1.[Time Period])="February") OR
((Sheet1.[Time Period])="March") OR
((Sheet1.[Time Period])="April") OR
((Sheet1.[Time Period])="May") OR
((Sheet1.[Time Period])="June") OR
((Sheet1.[Time Period])="July") OR
((Sheet1.[Time Period])="August") OR
((Sheet1.[Time Period])="September") OR
((Sheet1.[Time Period])="October") OR
((Sheet1.[Time Period])="November") OR
((Sheet1.[Time Period])="December")"         ) )
data <- sqlQuery( channel , paste ( "select * from Quality
WHERE (  ((Sheet1.[Time Period])="January") OR
((Sheet1.[Time Period])="February") OR
((Sheet1.[Time Period])="March") OR
((Sheet1.[Time Period])="April") OR
((Sheet1.[Time Period])="May") OR
((Sheet1.[Time Period])="June") OR
((Sheet1.[Time Period])="July") OR
((Sheet1.[Time Period])="August") OR
((Sheet1.[Time Period])="September") OR
((Sheet1.[Time Period])="October") OR
((Sheet1.[Time Period])="November") OR
((Sheet1.[Time Period])="December")"         ) )
data <- sqlQuery( channel , paste ( "  select * from Quality
WHERE (  ((Quality.[Time Period])="January") OR
((Quality.[Time Period])="February") OR
((Quality.[Time Period])="March") OR
((Quality.[Time Period])="April") OR
((Quality.[Time Period])="May") OR
((Quality.[Time Period])="June") OR
((Quality.[Time Period])="July") OR
((Quality.[Time Period])="August") OR
((Quality.[Time Period])="September") OR
((Quality.[Time Period])="October") OR
((Quality.[Time Period])="November") OR
((Quality.[Time Period])="December")  "         ) )
data <- sqlQuery( channel , paste (
SELECT [Quality].ID, [Quality].Business, [Quality].FacNum, [Quality].Facility, [Quality].Year, [Quality].[Time Period], [Quality].[Fill Lines], [Quality].[In the Box Quality Goal %], [Quality].[Warehouse Errors], [Quality].[Warehouse Errors Goal %], [Quality].Damage, [Quality].[Damage Goal %], [Quality].[Manual Markouts], [Quality].[Manual Markouts Goal %], [Quality].[Goal Fill Lines], [Quality].Region
FROM Quality
WHERE ((([Quality].[Time Period])="January")) Or ((([Quality].[Time Period])="February")) Or ((([Quality].[Time Period])="March")) Or ((([Quality].[Time Period])="April")) Or ((([Quality].[Time Period])="May")) Or ((([Quality].[Time Period])="June")) Or ((([Quality].[Time Period])="July")) Or ((([Quality].[Time Period])="August")) Or ((([Quality].[Time Period])="September"))
))
data <- sqlQuery( channel , paste ("
SELECT *
FROM Quality
WHERE ((([Quality].[Time Period])="January")) Or ((([Quality].[Time Period])="February")) Or ((([Quality].[Time Period])="March")) Or ((([Quality].[Time Period])="April")) Or ((([Quality].[Time Period])="May")) Or ((([Quality].[Time Period])="June")) Or ((([Quality].[Time Period])="July")) Or ((([Quality].[Time Period])="August")) Or ((([Quality].[Time Period])="September"))
"))
?RODBC
?RODBC
data <- sqlQuery( channel , paste ("SELECT * FROM Quality",
"WHERE ((([Quality].[Time Period])="January")) Or ((([Quality].[Time Period])="February")) Or ((([Quality].[Time Period])="March")) Or ((([Quality].[Time Period])="April")) Or ((([Quality].[Time Period])="May")) Or ((([Quality].[Time Period])="June")) Or ((([Quality].[Time Period])="July")) Or ((([Quality].[Time Period])="August")) Or ((([Quality].[Time Period])="September"))" ))
data <- sqlQuery( channel , paste ("SELECT * FROM Quality",
"WHERE ((([Quality].[Time Period])='January')) Or ((([Quality].[Time Period])='February')) Or ((([Quality].[Time Period])='March')) Or ((([Quality].[Time Period])='April')) Or ((([Quality].[Time Period])='May')) Or ((([Quality].[Time Period])='June')) Or ((([Quality].[Time Period])='July')) Or ((([Quality].[Time Period])='August')) Or ((([Quality].[Time Period])='September'))" ))
head(data); tail(data)
rm(data)
dat <- sqlQuery( channel , paste ("SELECT * FROM Quality",
"WHERE  ((([Quality].[Time Period])='January')) Or
((([Quality].[Time Period])='February')) Or
((([Quality].[Time Period])='March')) Or
((([Quality].[Time Period])='April')) Or
((([Quality].[Time Period])='May')) Or
((([Quality].[Time Period])='June')) Or
((([Quality].[Time Period])='July')) Or
((([Quality].[Time Period])='August')) Or
((([Quality].[Time Period])='September')) Or
((([Quality].[Time Period])='October')) Or
((([Quality].[Time Period])='November')) Or
((([Quality].[Time Period])='December'))  " ))
head(dat); tail(dat)
rm(dat)
dat <- sqlQuery( channel , paste ("SELECT * FROM Quality",
"WHERE  ((([Quality].[Time Period])='January')) Or
((([Quality].[Time Period])='February')) Or
((([Quality].[Time Period])='March')) Or
((([Quality].[Time Period])='April')) Or
((([Quality].[Time Period])='May')) Or
((([Quality].[Time Period])='June')) Or
((([Quality].[Time Period])='July')) Or
((([Quality].[Time Period])='August')) Or
((([Quality].[Time Period])='September')) Or
((([Quality].[Time Period])='October')) Or
((([Quality].[Time Period])='November')) Or
((([Quality].[Time Period])='December'))  " ))
head(dat); tail(dat)
dat <- sqlQuery( channel , paste ("SELECT * FROM Quality",
"WHERE  ((([Quality].[Time Period])='January')) Or
((([Quality].[Time Period])='February')) Or
((([Quality].[Time Period])='March')) Or
((([Quality].[Time Period])='April')) Or
((([Quality].[Time Period])='May')) Or
((([Quality].[Time Period])='June')) Or
((([Quality].[Time Period])='July')) Or
((([Quality].[Time Period])='August')) Or
((([Quality].[Time Period])='September')) Or
((([Quality].[Time Period])='October')) Or
((([Quality].[Time Period])='November')) Or
((([Quality].[Time Period])='December'))  " ))
head(dat); tail(dat)
odbcCloseAll()
Pa.aql.fn = function(sscheme){
p.vec = seq(0,0.40,0.0001)
Pa.data.tmp = pbinom(sscheme$ac.aql, sscheme$ssize.aql, p.vec, lower.tail = TRUE, log.p = FALSE)
#Pa.data.tmp = pbinom(sscheme[6], sscheme[4], p.vec, lower.tail = TRUE, log.p = FALSE)
return(Pa.data.tmp)
}
propnc.vec = seq(0,0.40,0.0001)
x.vec = 0:40/100
x.vec
R.home()
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
install.packages("DBI")
?dbWriteTable
library(DBI)
?dbWriteTable
library(twitteR)
install.packages("twitteR")
library(twitteR)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "DOxfSOhS8421ErcmypUm2AmSw"
consumerSecret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
?twitCred
?twitCred$handshake
?twitteR
getTwitterOAuth(consumerKey, consumerSecret)
getTwitterOAuth(consumerKey, consumerSecret)
getTwitterOAuth("DOxfSOhS8421ErcmypUm2AmSw", "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl")
library(RCurl)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "DOxfSOhS8421ErcmypUm2AmSw"
consumerSecret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
consumer.Key <- "DOxfSOhS8421ErcmypUm2AmSw"
consumer.Secret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
registerTwitterOAuth(twitCred)
registerTwitterOAuth(2622774)
twitCred$handshake()
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumer.Key <- "DOxfSOhS8421ErcmypUm2AmSw"
consumer.Secret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumer.Key,
consumerSecret=consumer.Secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
library(twitteR)
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumer.Key <- "DOxfSOhS8421ErcmypUm2AmSw"
consumer.Secret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumer.Key,
consumerSecret=consumer.Secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
library(RCurl)
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumer.Key <- "DOxfSOhS8421ErcmypUm2AmSw"
consumer.Secret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumer.Key,
consumerSecret=consumer.Secret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "DOxfSOhS8421ErcmypUm2AmSw"
consumerSecret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
getTwitterOAuth(consumerKey, consumerSecret)
getTwitterOAuth(consumerKey, consumerSecret)
library(twitteR)
library(ROAuth)
library(RCurl)
requestURL =   "https://api.twitter.com/oauth/request_token"
accessURL =    "https://api.twitter.com/oauth/access_token"
authURL =      "https://api.twitter.com/oauth/authorize"
consumerKey <- "DOxfSOhS8421ErcmypUm2AmSw"
consumerSecret <- "OYhUiGFBMY6T5ILLgrKMZSL9A8b8TP5gc7MiDH7Q6VjdDpJdgl"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
twitCred$handshake(cainfo="cacert.pem")
save(list="twitCred", file="twitteR_credentials")
?save
getwd()
rate.limit <- getCurRateLimitInfo( cainfo="cacert.pem")
registerTwitterOAuth(twitCred)
rate.limit <- getCurRateLimitInfo()
rate.limit
the.text = "This is a test of Twitter using R"
the.user = "@crlong1775"
dmSend(the.text, user, ...)
dmSend(the.text, user)
dmSend(the.text, the.user)
the.text = "Hi @BartCapristo.  This is a test message sent using R with the twitteR package."
the.user = "@BartCapristo"
dmSend(the.text, the.user)
the.user = "@crlong1775"
dmSend(the.text, the.user)
the.user = "@BartCapristo"
dmSend(the.text, the.user)
the.user = "@crlong1775"
the.text = "Hi @BartCapristo 23.  This is a test message sent using R with the twitteR package."
dmSend(the.text, the.user)
the.text = "Hi @BartCapristo.  This is a test message sent using R with the twitteR package."
the.user = "@BartCapristo"
dmSend(the.text, the.user)
the.text = "Hi @BartCapristo.  This is a test message sent using R with the twitteR package."
the.user = "@crlong1775"
dmSend(the.text, the.user)
the.user = "@BartCapristo"
?dmSend
getFollowerIDs()
the.user = "@BartCapristo"
dmSend(the.text, the.user)
library(sendmailR)
d.to = "8475021595@txt.att.net"
from <- "CliffordLong@ussco.com"
subject <- "Email sent using R"
body <- "Email body.\n Open the pod bay doors, HAL.\n I'm sorry, Dave. I'm afraid I can't do that."
mailControl=list(smtpServer="ch2cas.ussco.com")
sendmail(from=from, to=d.to, subject=subject, msg=body, control=mailControl)
d.to = "6307303257@txt.att.net"  # Bart C.
sendmail(from=from, to=d.to, subject=subject, msg=body, control=mailControl)
d.to = "7703187539@vtext.com"  # Brian L.
sendmail(from=from, to=d.to, subject=subject, msg=body, control=mailControl)
library(xlsx)
?system.file
filename = "temporary SPC Metric Opt-In List.xlsm"
filepath = "http://sharepoint2/ops/quality/metricspc/Metric%20OptIn%20List/"
fileinfo = "http://sharepoint2/ops/quality/metricspc/Metric%20OptIn%20List/temporary%20SPC%20Metric%20Opt-In%20List.xlsm"
file <- system.file(filepath, filename, package = "xlsx")
file
res <- read.xlsx(file, 1) # read the first sheet
file <- system.file(fileinfo, package = "xlsx")
res <- read.xlsx(file, 1) # read the first sheet
file
system.file(fileinfo, package = "xlsx")
?file.exists
file.exists(fileinfo)
fileinfo = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
file.exists(fileinfo)
fileinfo = "C:\\Users\\longcli\\Dropbox\\Work USSCO\\Data for Analysis\\_06 DEPLOY Automated SPC monitor and alert\\Facility Opt-In\\temporary SPC Metric Opt-In List.xlsm"
file.exists(fileinfo)
library(RCurl)
x <- getURL(fileinfo)
fileinfo = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
x <- getURL(fileinfo)
res <- read.xlsx(x, 1) # read the first sheet
read.csv(text = x)
x
read.xlsx(text = x)
read.xlsx(text = x, 1)
?read.xlsx
read.xlsx(text = x, sheetName = sheetname)
sheetname = "OPT-IN LIST"
read.xlsx(text = x, sheetName = sheetname)
?getURL
fileinfo = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
read.xlsx(fileinfo, sheetName = "OPT-IN LIST")
getURL(fileinfo)
?url
conn <- url(description = fileinfo, open ="r");
conn
read.xlsx(fileinfo, sheetName = "OPT-IN LIST")
read.xlsx(file = conn, sheetName = "OPT-IN LIST")
read.xlsx(file = conn)
read.xlsx(file = conn, sheetName = "OPT-IN LIST")
?read.xlsx
conn <- url(description = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm",
open = "r")
dat <- read.xlsx(file = conn, sheetName = "OPT-IN LIST")
require(XLConnect)
wb = loadWorkbook(fileinfo)
wb = loadWorkbook(conn)
con <- odbcConnectExcel2007(url(fileinfo))
library(ROBDC)
install.packages("RODBC")
library(ROBDC)
library(ROBDC)
library(ROBDC)
library('ROBDC')
install.packages(c("aplpack", "arules", "BH", "car", "data.table", "deldir", "devtools", "digest", "effects", "forecast", "googleVis", "gplots", "gWidgets2tcltk", "highr", "Hmisc", "httpuv", "jsonlite", "knitr", "magrittr", "mime", "multcomp", "mvtnorm", "qcc", "questionr", "R.utils", "R6", "Rcmdr", "RColorBrewer", "Rcpp", "RcppArmadillo", "RCurl", "repmis", "reshape2", "rgl", "ROAuth", "RSQLite", "sendmailR", "shiny", "sparr", "spatstat", "sqldf", "testthat", "TH.data", "timeDate"))
require(XLConnect)
library(ROBDC)
library(ROBDC)
install.packages(c("aplpack", "car", "caTools", "digest", "doBy", "e1071", "effects", "forecast", "formatR", "Formula", "ggplot2", "gplots", "gtools", "highr", "Hmisc", "httpuv", "knitr", "labeling", "lme4", "markdown", "mgcv", "mime", "minqa", "multcomp", "mvtnorm", "plotrix", "psych", "qcc", "Rcmdr", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "reshape2", "rgl", "RJSONIO", "sandwich", "sem", "shiny", "TH.data", "timeDate", "XLConnect", "xtable"))
library(ROBDC)
install.packages("RODBC")
library(ROBDC)
install.packages("ROBDC")
conn <- url(description = fileinfo, open ="r")
fileinfo = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
filename = "temporary SPC Metric Opt-In List.xlsm"
filepath = "http://sharepoint2/ops/quality/metricspc/Metric%20OptIn%20List/"
sheetname = "OPT-IN LIST"
conn <- url(description = fileinfo, open ="r")
conn
require(gdata)
df = read.xls(conn, sheet = 1, header = TRUE)
help(gdata)
df = read.xls(fileinfo, sheet = 1, header = TRUE)
nba.url <- "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
nba <- read.xls(nba.url)
nba <- read.xls(nba.url, perl = "perl")
nba.url
nba.path = "C:\\Users\\longcli\\Downloads\\temporary_SPC_Metric_Opt-In_List.xlsx"
nba <- read.xls(nba.path)
nba <- read.xls(nba.path, perl="perl")
nba <- read.xls(nba.path, sheet = "OPT-IN LIST", perl="perl")
nba.path = "C:\\Users\\longcli\\Downloads\\temporary_SPC_Metric_Opt-In_List.xlsx"
file.exists(nba.path)
wb = loadWorkbook(nba.path)
require(XLConnect)
wb = loadWorkbook(nba.path)
df = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE)
warnings()
nba.path = "C:\\Users\\longcli\\Downloads\\temporary_SPC_Metric_Opt-In_List.xlsm"
wb = loadWorkbook(nba.path)
df = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE)
warnings()
?readWorksheet
df = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE, useCachedValues = TRUE)
df
df2 = na.omit(df)
df2
df = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE, useCachedValues = TRUE, endCol = 1)
df
dim(df.init)
df.init = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE, useCachedValues = TRUE, endCol = 1)
dim(df.init)
df.all = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE,
useCachedValues = TRUE, endRow = dim(df.init)[1])
df.all
nba.path = "C:\\Users\\longcli\\Downloads\\temporary_SPC_Metric_Opt-In_List.xlsm"
file.exists(nba.path)
wb = loadWorkbook(nba.path)
optin.init = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE, endCol = 1)
optin.all = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE,
useCachedValues = TRUE, endRow = dim(optin.init)[1])
optin.init
optin.all
d.optin.init = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE, endCol = 1)
d.optin.all = readWorksheet(wb, sheet = "OPT-IN LIST", header = TRUE,
useCachedValues = TRUE, endRow = dim(optin.init)[1])
names(d.optin.all)
colnames(d.optin.all) <- c("FIRST.NAME",
"LAST.NAME",
"FACILITY",
"BUSINESS.UNIT",
"METRIC",
"EMAIL",
"MOBILE.PHONE",
"MOBILE.CARRIER")
names(d.optin.all)
nba.path = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
file.exists(nba.path)
library(gdata)
URL <- "http://www.econ.yale.edu/~shiller/data/ie_data.xls"
DF <- read.xls(URL, pattern = "Fraction")
DF <- read.xls(URL, pattern = "Fraction")
DF <- read.xls(URL, pattern = "Fraction", perl = "C:\\Perl64\\bin\\perl.exe")
DF
URL1 = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
DF1 <- read.xls(URL1, perl = "C:\\Perl64\\bin\\perl.exe")
DF1
head(DF1)
help(gdata)
gdata:::findPerl("perl")
DF1 <- read.xls(fileurl, pattern = "FIRST.NAME", perl = "C:\\Perl64\\bin\\perl.exe")
p
fileurl = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
DF1 <- read.xls(fileurl, pattern = "FIRST.NAME", perl = "C:\\Perl64\\bin\\perl.exe")
DF1
head(DF1)
?read.table
DF1 <- read.xls(fileurl, blank.lines.skip = TRUE, perl = "C:\\Perl64\\bin\\perl.exe")
head(DF1)
head(DF1, 20)
help(gdata)
DF1 <- read.xls(fileurl, blank.lines.skip = TRUE, perl = "C:\\Perl64\\bin\\perl.exe")[1]
head(DF1, 20)
DF1
na.omit(DF1)
tmp = na.omit(DF1)
tmp
head(DF1, 20)
nba
DF1 <- read.xls(fileurl, blank.lines.skip = TRUE, na.strings = "(blank)",
perl = "C:\\Perl64\\bin\\perl.exe")[1]
head(DF1, 20)
DF1 <- read.xls(fileurl, blank.lines.skip = TRUE, na.strings = "(blank)",
perl = "C:\\Perl64\\bin\\perl.exe")
head(DF1, 20)
DF1 <- read.xls(fileurl, blank.lines.skip = TRUE, na.strings = "(blank)",
perl = "C:\\Perl64\\bin\\perl.exe")
head(DF1, 20)
tmp = DF1[,!("BUSINESS.UNIT" == "(blank)")]
head(tmp, 20)
tmp
head(tmp, 20)
DF1 <- read.xls(fileurl, blank.lines.skip = TRUE,
perl = "C:\\Perl64\\bin\\perl.exe")
head(tmp, 20)
fileurl = "http://sharepoint2/ops/quality/metricspc/Metric OptIn List/temporary SPC Metric Opt-In List.xlsm"
DF1 <- read.xls(fileurl, perl = "C:\\Perl64\\bin\\perl.exe")
head(DF1, 20)
tmp = DF1[,!("BUSINESS.UNIT" == "(blank)")]
head(tmp, 20)
tmp = DF1[,!(DF1$BUSINESS.UNIT == "(blank)")]
head(tmp, 20)
DF1$BUSINESS.UNIT
!(DF1$BUSINESS.UNIT == "(blank)")
DF1$BUSINESS.UNIT == "(blank)"
tmp = DF1[!(DF1$BUSINESS.UNIT == "(blank)"),]
head(tmp, 20)
d.optin.init <- read.xls(fileurl, perl = "C:\\Perl64\\bin\\perl.exe")
d.optin = DF1[!(DF1$BUSINESS.UNIT == "(blank)"),]
d.optin
colnames(d.optin) <- c("FIRST.NAME",
"LAST.NAME",
"FACILITY",
"BUSINESS.UNIT",
"METRIC",
"EMAIL",
"MOBILE.PHONE",
"MOBILE.CARRIER")
d.optin
install.packages("manipulate")
setwd("C:/Users/longcli/Dropbox/Shiny SPC simple")
library(shiny)
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/longcli/Dropbox/Shiny-Simple-SPC/Shiny SPC simple")
library(shiny)
runApp()
